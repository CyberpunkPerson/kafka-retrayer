spring:
  application:
    name: retrayer

server:
  servlet:
    context-path: /retrayer

logging:
  level:
    root: info
    org.springframework.boot.web.servlet: trace
    com.github.cyberpunkperson: debug
  pattern:
    console: '%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X] %logger{80} %msg%n'

kafka:
  config:
    bootstrap-servers: ${kafka.cluster.url}
    properties: &default-kafka-config
      security:
        protocol: SASL_PLAINTEXT
      sasl:
        mechanism: SCRAM-SHA-512
        jaas.config: org.apache.kafka.common.security.scram.ScramLoginModule required username="${kafka.cluster.username}" password="${kafka.cluster.password}";
      request.timeout.ms: 300000
    producer: &default-producer
      key-serializer: org.apache.kafka.common.serialization.ByteArraySerializer
      value-serializer: org.apache.kafka.common.serialization.ByteArraySerializer
      properties:
        <<: *default-kafka-config
        acks: all
    consumer: &default-consumer
      group-id: ${spring.application.name}
      key-deserializer: org.apache.kafka.common.serialization.ByteArrayDeserializer
      value-deserializer: org.apache.kafka.common.serialization.ByteArrayDeserializer
      properties:
        <<: *default-kafka-config
        max.poll.records: 50
        max.poll.interval.ms: 500000
        session.timeout.ms: 60000
        auto.offset.reset: latest
  topic:
    source:
      bootstrap-servers: ${kafka.config.bootstrap-servers}
      names: ${spring.application.name}.source
      consumer: *default-consumer
      listener:
        concurrency: 3
    retry:
      bootstrap-servers: ${kafka.config.bootstrap-servers}
      consumer: *default-consumer
      producer: *default-producer

retry:
  intervals:
    PT5M: &5M
      duration: PT5M
      topic: ${spring.application.name}.interval.${retry.intervals.PT5M.duration}
    PT30M: &30M
      duration: PT30M
      topic: ${spring.application.name}.interval.${retry.intervals.PT30M.duration}
    PT1H: &1H
      duration: PT1H
      topic: ${spring.application.name}.interval.${retry.intervals.PT1H.duration}
  flows:
    default:
      - *5M
      - *5M
      - *30M
      - *1H

archive:
  topic: ${spring.application.name}.archive